[{"C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\index.js":"1","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\App.js":"2","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\reportWebVitals.js":"3","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\AppRouter.js":"4","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\DeckBuilderPage.jsx":"5","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\HomePage.jsx":"6","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\components\\Navbar.jsx":"7","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\CardListPage.jsx":"8","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\NoPage.jsx":"9","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\ArenaBuilderPage.jsx":"10","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\components\\Button.jsx":"11","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\CreateNewDeckPage.jsx":"12","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\oauth\\client.js":"13"},{"size":535,"mtime":1692576592664,"results":"14","hashOfConfig":"15"},{"size":217,"mtime":1694376570763,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1691963790566,"results":"17","hashOfConfig":"15"},{"size":1194,"mtime":1692738964491,"results":"18","hashOfConfig":"15"},{"size":3413,"mtime":1692740486130,"results":"19","hashOfConfig":"15"},{"size":809,"mtime":1692576560193,"results":"20","hashOfConfig":"15"},{"size":875,"mtime":1692576552054,"results":"21","hashOfConfig":"15"},{"size":107,"mtime":1692327339881,"results":"22","hashOfConfig":"15"},{"size":281,"mtime":1692741379945,"results":"23","hashOfConfig":"15"},{"size":115,"mtime":1692327333267,"results":"24","hashOfConfig":"15"},{"size":281,"mtime":1692739791973,"results":"25","hashOfConfig":"15"},{"size":1561,"mtime":1692742025653,"results":"26","hashOfConfig":"15"},{"size":874,"mtime":1694376544896,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"emm58m",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\index.js",[],[],[],"C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\App.js",[],[],"C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\reportWebVitals.js",[],[],"C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\AppRouter.js",[],[],"C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\DeckBuilderPage.jsx",["72"],[],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport Button from '../components/Button';\r\nimport DeathKnight from '../img/Death_Knight_icon.png';\r\nimport DemonHunter from '../img/Demon_Hunter_icon.png';\r\nimport Druid from '../img/Druid_icon.png';\r\nimport Hunter from '../img/Hunter_icon.png';\r\nimport Mage from '../img/Mage_icon.png';\r\nimport Paladin from '../img/Paladin_icon.png';\r\nimport Priest from '../img/Priest_icon.png';\r\nimport Shaman from '../img/Shaman_icon.png';\r\nimport Warlock from '../img/Warlock_icon.png';\r\nimport Warrior from '../img/Warrior_icon.png';\r\n\r\nimport '../styles/DeckBuilderPage.scss';\r\n\r\nconst DeckBuilderPage = () => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [selectedClass, setSelectedClass] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n    \r\n    const hsClasses = [\r\n        { id: 'deathKnight', name: 'Death Knight', img: DeathKnight},\r\n        { id: 'demonHunter', name: 'Demon Hunter', img: DemonHunter},\r\n        { id: 'druid', name: 'Druid', img: Druid},\r\n        { id: 'hunter', name: 'Hunter', img: Hunter},\r\n        { id: 'mage', name: 'Mage', img: Mage},\r\n        { id: 'paladin', name: 'Paladin', img: Paladin},\r\n        { id: 'priest', name: 'Priest', img: Priest},\r\n        { id: 'shaman', name: 'Shaman', img: Shaman},\r\n        { id: 'warlock', name: 'Warlock', img: Warlock},\r\n        { id: 'warrior', name: 'Warrior', img: Warrior},        \r\n    ];\r\n\r\n    const openModal = () => {\r\n        setModalIsOpen(true);\r\n    };\r\n    const closeModal = () => {\r\n        setModalIsOpen(false);\r\n        setSelectedClass(null);\r\n    };\r\n    const changeSelectedClass = (selection) => {\r\n        setSelectedClass(selection);\r\n    };\r\n\r\n    const handleCreateConfirm = () => {\r\n        console.log(selectedClass);\r\n        setModalIsOpen(false);\r\n        navigate('new', { state: selectedClass });\r\n    };\r\n\r\n    return(\r\n        <div className=\"deckBuilder\">\r\n            <h4>Decks:</h4>\r\n            <Button text='Create New Deck' onClick={openModal} />\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                className=\"classModal\"\r\n                ariaHideApp={false}\r\n            >\r\n                <h4>Pick a Class</h4>\r\n                <div className='classes'>\r\n                    {hsClasses.map((hsClass) => {\r\n                        return (\r\n                            <div\r\n                                className={selectedClass?.id === hsClass.id ? 'selectedClass' : 'class'}\r\n                                id={hsClass.id}\r\n                                key={hsClass.id}\r\n                                onClick={() => {\r\n                                    changeSelectedClass(hsClass);\r\n                                }}\r\n                            >\r\n                                <img src={hsClass.img} />\r\n                                <p>{hsClass.name}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className='buttons'>\r\n                    <Button text='Cancel' onClick={closeModal} />\r\n                    <Button text='Confirm' onClick={handleCreateConfirm} isDisabled={selectedClass === null} />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeckBuilderPage;","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\HomePage.jsx",[],[],"C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\components\\Navbar.jsx",[],[],"C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\CardListPage.jsx",["73"],[],"import React from 'react';\r\n\r\nconst CardListPage = () => {\r\n    return;\r\n};\r\n\r\nexport default CardListPage;","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\NoPage.jsx",[],[],"C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\ArenaBuilderPage.jsx",["74"],[],"import React from 'react';\r\n\r\nconst ArenaBuilderPage = () => {\r\n    return;\r\n};\r\n\r\nexport default ArenaBuilderPage;","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\components\\Button.jsx",[],[],"C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\pages\\CreateNewDeckPage.jsx",["75","76","77"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../components/Button';\r\nimport '../styles/CreateNewDeckPage.scss';\r\n\r\nconst CreateNewDeckPage = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const [deck, setDeck] = useState([]);\r\n\r\n    const handleCancel = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const handleCreate = () => {\r\n\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            { location.state?.img ? (\r\n                <div className='createNewDeck'>\r\n                    <div className='currentDeck'>\r\n                        <img src={location.state.img} />\r\n                        <h3>{location.state.name}</h3>\r\n                        <label for='deckName'>Deck Name:</label>\r\n                        <input className='deckName' type='text'></input>\r\n                    </div>\r\n                    <div className='cards'>\r\n                    </div>\r\n                    <div className='buttons'>\r\n                        <Button text='Cancel' onClick={handleCancel} />\r\n                        <Button text='Create' onClick={handleCreate} isDisabled={deck.length < 30} />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <p>Invalid Data</p>\r\n                    <Link to='..'>Click here to go back</Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateNewDeckPage;","C:\\Programming\\Hearthstone\\Hearthstone-Arena-Deck-Builder\\hearthstone-app\\src\\oauth\\client.js",[],[],{"ruleId":"78","severity":1,"message":"79","line":75,"column":33,"nodeType":"80","endLine":75,"endColumn":58},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"85","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"86","line":10,"column":18,"nodeType":"83","messageId":"84","endLine":10,"endColumn":25},{"ruleId":"78","severity":1,"message":"79","line":25,"column":25,"nodeType":"80","endLine":25,"endColumn":57},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setDeck' is assigned a value but never used."]