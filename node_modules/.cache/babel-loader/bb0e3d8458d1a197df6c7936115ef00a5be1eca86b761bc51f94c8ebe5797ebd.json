{"ast":null,"code":"'use strict';\n\nconst AccessToken = require('./access-token');\nconst GrantTypeParams = require('./grant-type-params');\nmodule.exports = class ClientCredentials {\n  #config = null;\n  #client = null;\n  constructor(config, client) {\n    this.#config = config;\n    this.#client = client;\n  }\n\n  /**\n   * Requests and returns an access token from the authorization server\n   *\n   * @param {Object} params\n   * @param {String|Array<String>} [params.scope] A String or array of strings representing the application privileges\n   * @param {Object} [httpOptions] Optional http options passed through the underlying http library\n   * @return {Promise<AccessToken>}\n   */\n  async getToken(params, httpOptions) {\n    const parameters = GrantTypeParams.forGrantType('client_credentials', this.#config.options, params);\n    const response = await this.#client.request(this.#config.auth.tokenPath, parameters.toObject(), httpOptions);\n    return this.createToken(response);\n  }\n\n  /**\n   * Creates a new access token instance from a plain object\n   *\n   * @param {Object} token Plain object representation of an access token\n   * @returns {AccessToken}\n   */\n  createToken(token) {\n    return new AccessToken(this.#config, this.#client, token);\n  }\n};","map":{"version":3,"names":["AccessToken","require","GrantTypeParams","module","exports","ClientCredentials","config","client","constructor","getToken","params","httpOptions","parameters","forGrantType","options","response","request","auth","tokenPath","toObject","createToken","token"],"sources":["C:/Programming/Hearthstone/Hearthstone-Arena-Deck-Builder/hearthstone-app/node_modules/simple-oauth2/lib/client-credentials-grant-type.js"],"sourcesContent":["'use strict';\n\nconst AccessToken = require('./access-token');\nconst GrantTypeParams = require('./grant-type-params');\n\nmodule.exports = class ClientCredentials {\n  #config = null;\n  #client = null;\n\n  constructor(config, client) {\n    this.#config = config;\n    this.#client = client;\n  }\n\n  /**\n   * Requests and returns an access token from the authorization server\n   *\n   * @param {Object} params\n   * @param {String|Array<String>} [params.scope] A String or array of strings representing the application privileges\n   * @param {Object} [httpOptions] Optional http options passed through the underlying http library\n   * @return {Promise<AccessToken>}\n   */\n  async getToken(params, httpOptions) {\n    const parameters = GrantTypeParams.forGrantType('client_credentials', this.#config.options, params);\n    const response = await this.#client.request(this.#config.auth.tokenPath, parameters.toObject(), httpOptions);\n\n    return this.createToken(response);\n  }\n\n  /**\n   * Creates a new access token instance from a plain object\n   *\n   * @param {Object} token Plain object representation of an access token\n   * @returns {AccessToken}\n   */\n  createToken(token) {\n    return new AccessToken(this.#config, this.#client, token);\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC7C,MAAMC,eAAe,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAEtDE,MAAM,CAACC,OAAO,GAAG,MAAMC,iBAAiB,CAAC;EACvC,CAACC,MAAM,GAAG,IAAI;EACd,CAACC,MAAM,GAAG,IAAI;EAEdC,WAAWA,CAACF,MAAM,EAAEC,MAAM,EAAE;IAC1B,IAAI,CAAC,CAACD,MAAM,GAAGA,MAAM;IACrB,IAAI,CAAC,CAACC,MAAM,GAAGA,MAAM;EACvB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAME,QAAQA,CAACC,MAAM,EAAEC,WAAW,EAAE;IAClC,MAAMC,UAAU,GAAGV,eAAe,CAACW,YAAY,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAACP,MAAM,CAACQ,OAAO,EAAEJ,MAAM,CAAC;IACnG,MAAMK,QAAQ,GAAG,MAAM,IAAI,CAAC,CAACR,MAAM,CAACS,OAAO,CAAC,IAAI,CAAC,CAACV,MAAM,CAACW,IAAI,CAACC,SAAS,EAAEN,UAAU,CAACO,QAAQ,CAAC,CAAC,EAAER,WAAW,CAAC;IAE5G,OAAO,IAAI,CAACS,WAAW,CAACL,QAAQ,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEK,WAAWA,CAACC,KAAK,EAAE;IACjB,OAAO,IAAIrB,WAAW,CAAC,IAAI,CAAC,CAACM,MAAM,EAAE,IAAI,CAAC,CAACC,MAAM,EAAEc,KAAK,CAAC;EAC3D;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}